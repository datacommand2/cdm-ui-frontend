/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InstanceTemplateInstanceDependency } from './InstanceTemplateInstanceDependency';
import {
    InstanceTemplateInstanceDependencyFromJSON,
    InstanceTemplateInstanceDependencyFromJSONTyped,
    InstanceTemplateInstanceDependencyToJSON,
} from './InstanceTemplateInstanceDependency';

/**
 * 인스턴스 템플릿의 인스턴스
 * @export
 * @interface InstanceTemplateInstance
 */
export interface InstanceTemplateInstance {
    /**
     * 인스턴스 이름
     * @type {string}
     * @memberof InstanceTemplateInstance
     */
    name?: string;
    /**
     * 재해복구시 기동 여부
     * @type {boolean}
     * @memberof InstanceTemplateInstance
     */
    auto_start_flag?: boolean;
    /**
     * 재해복구 기동 후 정상동작 확인 여부
     * @type {boolean}
     * @memberof InstanceTemplateInstance
     */
    diagnosis_flag?: boolean;
    /**
     * 재해복구 기동 후 정상동작 확인 방법
     * @type {string}
     * @memberof InstanceTemplateInstance
     */
    diagnosis_method_code?: InstanceTemplateInstanceDiagnosisMethodCodeEnum;
    /**
     * 재해복구 기동 후 정상동작 확인 방법 데이터
     * @type {string}
     * @memberof InstanceTemplateInstance
     */
    diagnosis_method_data?: string;
    /**
     * 재해복구 기동 후 정상동작 확인 대기 시간 (초)
     * @type {number}
     * @memberof InstanceTemplateInstance
     */
    diagnosis_timeout?: number;
    /**
     * 의존하는 인스턴스 목록
     * @type {Array<InstanceTemplateInstanceDependency>}
     * @memberof InstanceTemplateInstance
     */
    dependencies?: Array<InstanceTemplateInstanceDependency>;
}


/**
 * @export
 */
export const InstanceTemplateInstanceDiagnosisMethodCodeEnum = {
    shell_script: 'dr.recovery.plan.instance.diagnosis.method.shell-script',
    port_scan: 'dr.recovery.plan.instance.diagnosis.method.port-scan',
    http_get: 'dr.recovery.plan.instance.diagnosis.method.http-get'
} as const;
export type InstanceTemplateInstanceDiagnosisMethodCodeEnum = typeof InstanceTemplateInstanceDiagnosisMethodCodeEnum[keyof typeof InstanceTemplateInstanceDiagnosisMethodCodeEnum];


/**
 * Check if a given object implements the InstanceTemplateInstance interface.
 */
export function instanceOfInstanceTemplateInstance(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InstanceTemplateInstanceFromJSON(json: any): InstanceTemplateInstance {
    return InstanceTemplateInstanceFromJSONTyped(json, false);
}

export function InstanceTemplateInstanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstanceTemplateInstance {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'auto_start_flag': !exists(json, 'auto_start_flag') ? undefined : json['auto_start_flag'],
        'diagnosis_flag': !exists(json, 'diagnosis_flag') ? undefined : json['diagnosis_flag'],
        'diagnosis_method_code': !exists(json, 'diagnosis_method_code') ? undefined : json['diagnosis_method_code'],
        'diagnosis_method_data': !exists(json, 'diagnosis_method_data') ? undefined : json['diagnosis_method_data'],
        'diagnosis_timeout': !exists(json, 'diagnosis_timeout') ? undefined : json['diagnosis_timeout'],
        'dependencies': !exists(json, 'dependencies') ? undefined : ((json['dependencies'] as Array<any>).map(InstanceTemplateInstanceDependencyFromJSON)),
    };
}

export function InstanceTemplateInstanceToJSON(value?: InstanceTemplateInstance | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'auto_start_flag': value.auto_start_flag,
        'diagnosis_flag': value.diagnosis_flag,
        'diagnosis_method_code': value.diagnosis_method_code,
        'diagnosis_method_data': value.diagnosis_method_data,
        'diagnosis_timeout': value.diagnosis_timeout,
        'dependencies': value.dependencies === undefined ? undefined : ((value.dependencies as Array<any>).map(InstanceTemplateInstanceDependencyToJSON)),
    };
}

