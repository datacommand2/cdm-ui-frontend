/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ClusterInstanceSpec } from './ClusterInstanceSpec';
import {
    ClusterInstanceSpecFromJSON,
    ClusterInstanceSpecFromJSONTyped,
    ClusterInstanceSpecToJSON,
} from './ClusterInstanceSpec';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
} from './Message';

/**
 * 인스턴스 스펙 복구 상태
 * @export
 * @interface RecoveryJobInstanceSpecStatus
 */
export interface RecoveryJobInstanceSpecStatus {
    /**
     * 
     * @type {ClusterInstanceSpec}
     * @memberof RecoveryJobInstanceSpecStatus
     */
    instance_spec?: ClusterInstanceSpec;
    /**
     * 데이터 시점 유형
     * @type {string}
     * @memberof RecoveryJobInstanceSpecStatus
     */
    recovery_point_type_code?: RecoveryJobInstanceSpecStatusRecoveryPointTypeCodeEnum;
    /**
     * 복구 데이터 시점
     * @type {number}
     * @memberof RecoveryJobInstanceSpecStatus
     */
    recovery_point?: number;
    /**
     * 복구 시작 일시
     * @type {number}
     * @memberof RecoveryJobInstanceSpecStatus
     */
    started_at?: number;
    /**
     * 복구 종료 일시
     * @type {number}
     * @memberof RecoveryJobInstanceSpecStatus
     */
    finished_at?: number;
    /**
     * 복구 상태
     * @type {string}
     * @memberof RecoveryJobInstanceSpecStatus
     */
    state_code?: RecoveryJobInstanceSpecStatusStateCodeEnum;
    /**
     * 복구 결과
     * @type {string}
     * @memberof RecoveryJobInstanceSpecStatus
     */
    result_code?: RecoveryJobInstanceSpecStatusResultCodeEnum;
    /**
     * 복구, 롤백 상태
     * @type {string}
     * @memberof RecoveryJobInstanceSpecStatus
     */
    type_code?: RecoveryJobInstanceSpecStatusTypeCodeEnum;
    /**
     * 
     * @type {Message}
     * @memberof RecoveryJobInstanceSpecStatus
     */
    failed_reason?: Message;
    /**
     * 롤백 여부
     * @type {boolean}
     * @memberof RecoveryJobInstanceSpecStatus
     */
    rollback_flag?: boolean;
}


/**
 * @export
 */
export const RecoveryJobInstanceSpecStatusRecoveryPointTypeCodeEnum = {
    latest: 'dr.recovery.recovery_point.type.latest',
    latest_snapshot: 'dr.recovery.recovery_point.type.latest_snapshot',
    snapshot: 'dr.recovery.recovery_point.type.snapshot'
} as const;
export type RecoveryJobInstanceSpecStatusRecoveryPointTypeCodeEnum = typeof RecoveryJobInstanceSpecStatusRecoveryPointTypeCodeEnum[keyof typeof RecoveryJobInstanceSpecStatusRecoveryPointTypeCodeEnum];

/**
 * @export
 */
export const RecoveryJobInstanceSpecStatusStateCodeEnum = {
    waiting: 'waiting',
    running: 'running',
    done: 'done'
} as const;
export type RecoveryJobInstanceSpecStatusStateCodeEnum = typeof RecoveryJobInstanceSpecStatusStateCodeEnum[keyof typeof RecoveryJobInstanceSpecStatusStateCodeEnum];

/**
 * @export
 */
export const RecoveryJobInstanceSpecStatusResultCodeEnum = {
    success: 'success',
    failed: 'failed',
    excepted: 'excepted',
    ignored: 'ignored',
    canceled: 'canceled'
} as const;
export type RecoveryJobInstanceSpecStatusResultCodeEnum = typeof RecoveryJobInstanceSpecStatusResultCodeEnum[keyof typeof RecoveryJobInstanceSpecStatusResultCodeEnum];

/**
 * @export
 */
export const RecoveryJobInstanceSpecStatusTypeCodeEnum = {
    create: 'dr.migration.task.create',
    delete: 'dr.migration.task.delete'
} as const;
export type RecoveryJobInstanceSpecStatusTypeCodeEnum = typeof RecoveryJobInstanceSpecStatusTypeCodeEnum[keyof typeof RecoveryJobInstanceSpecStatusTypeCodeEnum];


/**
 * Check if a given object implements the RecoveryJobInstanceSpecStatus interface.
 */
export function instanceOfRecoveryJobInstanceSpecStatus(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RecoveryJobInstanceSpecStatusFromJSON(json: any): RecoveryJobInstanceSpecStatus {
    return RecoveryJobInstanceSpecStatusFromJSONTyped(json, false);
}

export function RecoveryJobInstanceSpecStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecoveryJobInstanceSpecStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'instance_spec': !exists(json, 'instance_spec') ? undefined : ClusterInstanceSpecFromJSON(json['instance_spec']),
        'recovery_point_type_code': !exists(json, 'recovery_point_type_code') ? undefined : json['recovery_point_type_code'],
        'recovery_point': !exists(json, 'recovery_point') ? undefined : json['recovery_point'],
        'started_at': !exists(json, 'started_at') ? undefined : json['started_at'],
        'finished_at': !exists(json, 'finished_at') ? undefined : json['finished_at'],
        'state_code': !exists(json, 'state_code') ? undefined : json['state_code'],
        'result_code': !exists(json, 'result_code') ? undefined : json['result_code'],
        'type_code': !exists(json, 'type_code') ? undefined : json['type_code'],
        'failed_reason': !exists(json, 'failed_reason') ? undefined : MessageFromJSON(json['failed_reason']),
        'rollback_flag': !exists(json, 'rollback_flag') ? undefined : json['rollback_flag'],
    };
}

export function RecoveryJobInstanceSpecStatusToJSON(value?: RecoveryJobInstanceSpecStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'instance_spec': ClusterInstanceSpecToJSON(value.instance_spec),
        'recovery_point_type_code': value.recovery_point_type_code,
        'recovery_point': value.recovery_point,
        'started_at': value.started_at,
        'finished_at': value.finished_at,
        'state_code': value.state_code,
        'result_code': value.result_code,
        'type_code': value.type_code,
        'failed_reason': MessageToJSON(value.failed_reason),
        'rollback_flag': value.rollback_flag,
    };
}

