/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ClusterVolume } from './ClusterVolume';
import {
    ClusterVolumeFromJSON,
    ClusterVolumeFromJSONTyped,
    ClusterVolumeToJSON,
} from './ClusterVolume';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
} from './Message';

/**
 * 볼륨 복구 상태
 * @export
 * @interface RecoveryJobVolumeStatus
 */
export interface RecoveryJobVolumeStatus {
    /**
     * 
     * @type {ClusterVolume}
     * @memberof RecoveryJobVolumeStatus
     */
    volume?: ClusterVolume;
    /**
     * 데이터 시점 유형
     * @type {string}
     * @memberof RecoveryJobVolumeStatus
     */
    recovery_point_type_code?: RecoveryJobVolumeStatusRecoveryPointTypeCodeEnum;
    /**
     * 복구 데이터 시점
     * @type {number}
     * @memberof RecoveryJobVolumeStatus
     */
    recovery_point?: number;
    /**
     * 복구 시작 일시
     * @type {number}
     * @memberof RecoveryJobVolumeStatus
     */
    started_at?: number;
    /**
     * 복구 종료 일시
     * @type {number}
     * @memberof RecoveryJobVolumeStatus
     */
    finished_at?: number;
    /**
     * 복구 상태
     * @type {string}
     * @memberof RecoveryJobVolumeStatus
     */
    state_code?: RecoveryJobVolumeStatusStateCodeEnum;
    /**
     * 복구 결과
     * @type {string}
     * @memberof RecoveryJobVolumeStatus
     */
    result_code?: RecoveryJobVolumeStatusResultCodeEnum;
    /**
     * 복구, 롤백 상태
     * @type {string}
     * @memberof RecoveryJobVolumeStatus
     */
    type_code?: RecoveryJobVolumeStatusTypeCodeEnum;
    /**
     * 
     * @type {Message}
     * @memberof RecoveryJobVolumeStatus
     */
    failed_reason?: Message;
    /**
     * 롤백 여부
     * @type {boolean}
     * @memberof RecoveryJobVolumeStatus
     */
    rollback_flag?: boolean;
}


/**
 * @export
 */
export const RecoveryJobVolumeStatusRecoveryPointTypeCodeEnum = {
    latest: 'dr.recovery.recovery_point.type.latest',
    latest_snapshot: 'dr.recovery.recovery_point.type.latest_snapshot',
    snapshot: 'dr.recovery.recovery_point.type.snapshot'
} as const;
export type RecoveryJobVolumeStatusRecoveryPointTypeCodeEnum = typeof RecoveryJobVolumeStatusRecoveryPointTypeCodeEnum[keyof typeof RecoveryJobVolumeStatusRecoveryPointTypeCodeEnum];

/**
 * @export
 */
export const RecoveryJobVolumeStatusStateCodeEnum = {
    preparing: 'dr.recovery.job.volume.state.preparing',
    excepted: 'dr.recovery.job.volume.state.excepted',
    success: 'dr.recovery.job.volume.state.success',
    failed: 'dr.recovery.job.volume.state.failed'
} as const;
export type RecoveryJobVolumeStatusStateCodeEnum = typeof RecoveryJobVolumeStatusStateCodeEnum[keyof typeof RecoveryJobVolumeStatusStateCodeEnum];

/**
 * @export
 */
export const RecoveryJobVolumeStatusResultCodeEnum = {
    success: 'dr.recovery.volume.result.success',
    failed: 'dr.recovery.volume.result.failed',
    canceled: 'dr.recovery.volume.result.canceled'
} as const;
export type RecoveryJobVolumeStatusResultCodeEnum = typeof RecoveryJobVolumeStatusResultCodeEnum[keyof typeof RecoveryJobVolumeStatusResultCodeEnum];

/**
 * @export
 */
export const RecoveryJobVolumeStatusTypeCodeEnum = {
    create: 'dr.migration.task.create',
    delete: 'dr.migration.task.delete'
} as const;
export type RecoveryJobVolumeStatusTypeCodeEnum = typeof RecoveryJobVolumeStatusTypeCodeEnum[keyof typeof RecoveryJobVolumeStatusTypeCodeEnum];


/**
 * Check if a given object implements the RecoveryJobVolumeStatus interface.
 */
export function instanceOfRecoveryJobVolumeStatus(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RecoveryJobVolumeStatusFromJSON(json: any): RecoveryJobVolumeStatus {
    return RecoveryJobVolumeStatusFromJSONTyped(json, false);
}

export function RecoveryJobVolumeStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecoveryJobVolumeStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'volume': !exists(json, 'volume') ? undefined : ClusterVolumeFromJSON(json['volume']),
        'recovery_point_type_code': !exists(json, 'recovery_point_type_code') ? undefined : json['recovery_point_type_code'],
        'recovery_point': !exists(json, 'recovery_point') ? undefined : json['recovery_point'],
        'started_at': !exists(json, 'started_at') ? undefined : json['started_at'],
        'finished_at': !exists(json, 'finished_at') ? undefined : json['finished_at'],
        'state_code': !exists(json, 'state_code') ? undefined : json['state_code'],
        'result_code': !exists(json, 'result_code') ? undefined : json['result_code'],
        'type_code': !exists(json, 'type_code') ? undefined : json['type_code'],
        'failed_reason': !exists(json, 'failed_reason') ? undefined : MessageFromJSON(json['failed_reason']),
        'rollback_flag': !exists(json, 'rollback_flag') ? undefined : json['rollback_flag'],
    };
}

export function RecoveryJobVolumeStatusToJSON(value?: RecoveryJobVolumeStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'volume': ClusterVolumeToJSON(value.volume),
        'recovery_point_type_code': value.recovery_point_type_code,
        'recovery_point': value.recovery_point,
        'started_at': value.started_at,
        'finished_at': value.finished_at,
        'state_code': value.state_code,
        'result_code': value.result_code,
        'type_code': value.type_code,
        'failed_reason': MessageToJSON(value.failed_reason),
        'rollback_flag': value.rollback_flag,
    };
}

