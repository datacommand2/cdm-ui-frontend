/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Cluster } from './Cluster';
import {
    ClusterFromJSON,
    ClusterFromJSONTyped,
    ClusterToJSON,
} from './Cluster';

/**
 * 클러스터 가용구역
 * @export
 * @interface ClusterAvailabilityZone
 */
export interface ClusterAvailabilityZone {
    /**
     * 클러스터 가용구역의 ID
     * @type {number}
     * @memberof ClusterAvailabilityZone
     */
    id?: number;
    /**
     * 
     * @type {Cluster}
     * @memberof ClusterAvailabilityZone
     */
    cluster?: Cluster;
    /**
     * 클러스터 가용구역의 이름
     * @type {string}
     * @memberof ClusterAvailabilityZone
     */
    name?: string;
    /**
     * 가용구역의 가용여부
     * @type {boolean}
     * @memberof ClusterAvailabilityZone
     */
    available?: boolean;
}

/**
 * Check if a given object implements the ClusterAvailabilityZone interface.
 */
export function instanceOfClusterAvailabilityZone(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ClusterAvailabilityZoneFromJSON(json: any): ClusterAvailabilityZone {
    return ClusterAvailabilityZoneFromJSONTyped(json, false);
}

export function ClusterAvailabilityZoneFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClusterAvailabilityZone {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'cluster': !exists(json, 'cluster') ? undefined : ClusterFromJSON(json['cluster']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'available': !exists(json, 'available') ? undefined : json['available'],
    };
}

export function ClusterAvailabilityZoneToJSON(value?: ClusterAvailabilityZone | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'cluster': ClusterToJSON(value.cluster),
        'name': value.name,
        'available': value.available,
    };
}

