/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProtectionGroup } from './ProtectionGroup';
import {
    ProtectionGroupFromJSON,
    ProtectionGroupFromJSONTyped,
    ProtectionGroupToJSON,
} from './ProtectionGroup';

/**
 * 보호 클러스터 history
 * @export
 * @interface ProtectionClusterHistory
 */
export interface ProtectionClusterHistory {
    /**
     * 보호 클러스터 ID
     * @type {number}
     * @memberof ProtectionClusterHistory
     */
    id?: number;
    /**
     * 보호 클러스터 이름
     * @type {string}
     * @memberof ProtectionClusterHistory
     */
    name?: string;
    /**
     * 보호그룹 목록(history)
     * @type {Array<ProtectionGroup>}
     * @memberof ProtectionClusterHistory
     */
    groups?: Array<ProtectionGroup>;
}

/**
 * Check if a given object implements the ProtectionClusterHistory interface.
 */
export function instanceOfProtectionClusterHistory(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProtectionClusterHistoryFromJSON(json: any): ProtectionClusterHistory {
    return ProtectionClusterHistoryFromJSONTyped(json, false);
}

export function ProtectionClusterHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProtectionClusterHistory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'groups': !exists(json, 'groups') ? undefined : ((json['groups'] as Array<any>).map(ProtectionGroupFromJSON)),
    };
}

export function ProtectionClusterHistoryToJSON(value?: ProtectionClusterHistory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'groups': value.groups === undefined ? undefined : ((value.groups as Array<any>).map(ProtectionGroupToJSON)),
    };
}

