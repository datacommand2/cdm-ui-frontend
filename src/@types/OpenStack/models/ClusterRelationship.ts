/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Cluster } from './Cluster';
import {
    ClusterFromJSON,
    ClusterFromJSONTyped,
    ClusterToJSON,
} from './Cluster';
import type { ClusterRelationshipPlansInner } from './ClusterRelationshipPlansInner';
import {
    ClusterRelationshipPlansInnerFromJSON,
    ClusterRelationshipPlansInnerFromJSONTyped,
    ClusterRelationshipPlansInnerToJSON,
} from './ClusterRelationshipPlansInner';

/**
 * 클러스터 관계
 * @export
 * @interface ClusterRelationship
 */
export interface ClusterRelationship {
    /**
     * 
     * @type {Cluster}
     * @memberof ClusterRelationship
     */
    protection_cluster?: Cluster;
    /**
     * 
     * @type {Cluster}
     * @memberof ClusterRelationship
     */
    recovery_cluster?: Cluster;
    /**
     * 클러스터 관계 상태
     * @type {string}
     * @memberof ClusterRelationship
     */
    state_code?: ClusterRelationshipStateCodeEnum;
    /**
     * 
     * @type {Array<ClusterRelationshipPlansInner>}
     * @memberof ClusterRelationship
     */
    plans?: Array<ClusterRelationshipPlansInner>;
}


/**
 * @export
 */
export const ClusterRelationshipStateCodeEnum = {
    normal: 'dr.cluster.relationship.state.normal',
    warning: 'dr.cluster.relationship.state.warning',
    critical: 'dr.cluster.relationship.state.critical',
    emergency: 'dr.cluster.relationship.state.emergency'
} as const;
export type ClusterRelationshipStateCodeEnum = typeof ClusterRelationshipStateCodeEnum[keyof typeof ClusterRelationshipStateCodeEnum];


/**
 * Check if a given object implements the ClusterRelationship interface.
 */
export function instanceOfClusterRelationship(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ClusterRelationshipFromJSON(json: any): ClusterRelationship {
    return ClusterRelationshipFromJSONTyped(json, false);
}

export function ClusterRelationshipFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClusterRelationship {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'protection_cluster': !exists(json, 'protection_cluster') ? undefined : ClusterFromJSON(json['protection_cluster']),
        'recovery_cluster': !exists(json, 'recovery_cluster') ? undefined : ClusterFromJSON(json['recovery_cluster']),
        'state_code': !exists(json, 'state_code') ? undefined : json['state_code'],
        'plans': !exists(json, 'plans') ? undefined : ((json['plans'] as Array<any>).map(ClusterRelationshipPlansInnerFromJSON)),
    };
}

export function ClusterRelationshipToJSON(value?: ClusterRelationship | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'protection_cluster': ClusterToJSON(value.protection_cluster),
        'recovery_cluster': ClusterToJSON(value.recovery_cluster),
        'state_code': value.state_code,
        'plans': value.plans === undefined ? undefined : ((value.plans as Array<any>).map(ClusterRelationshipPlansInnerToJSON)),
    };
}

