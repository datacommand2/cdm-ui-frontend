/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Cluster } from './Cluster';
import {
    ClusterFromJSON,
    ClusterFromJSONTyped,
    ClusterToJSON,
} from './Cluster';
import type { ClusterAvailabilityZone } from './ClusterAvailabilityZone';
import {
    ClusterAvailabilityZoneFromJSON,
    ClusterAvailabilityZoneFromJSONTyped,
    ClusterAvailabilityZoneToJSON,
} from './ClusterAvailabilityZone';

/**
 * 클러스터 Hypervisor
 * @export
 * @interface ClusterHypervisor
 */
export interface ClusterHypervisor {
    /**
     * 클러스터 Hypervisor 의 ID
     * @type {number}
     * @memberof ClusterHypervisor
     */
    id?: number;
    /**
     * 
     * @type {Cluster}
     * @memberof ClusterHypervisor
     */
    cluster?: Cluster;
    /**
     * 
     * @type {ClusterAvailabilityZone}
     * @memberof ClusterHypervisor
     */
    availability_zone?: ClusterAvailabilityZone;
    /**
     * 클러스터에서의 Hypervisor ID
     * @type {string}
     * @memberof ClusterHypervisor
     */
    uuid?: string;
    /**
     * 클러스터 Hypervisor 의 종류
     * @type {string}
     * @memberof ClusterHypervisor
     */
    type_code?: ClusterHypervisorTypeCodeEnum;
    /**
     * 클러스터 Hypervisor 의 호스트네임
     * @type {string}
     * @memberof ClusterHypervisor
     */
    hostname?: string;
    /**
     * 클러스터 Hypervisor 의 IP 주소
     * @type {string}
     * @memberof ClusterHypervisor
     */
    ip_address?: string;
    /**
     * 클러스터 Hypervisor 의 CPU 코어 갯수 (core)
     * @type {number}
     * @memberof ClusterHypervisor
     */
    vcpu_total_cnt?: number;
    /**
     * 클러스터 Hypervisor 의 사용중인 VCPU 갯수
     * @type {number}
     * @memberof ClusterHypervisor
     */
    vcpu_used_cnt?: number;
    /**
     * 클러스터 Hypervisor 의 총 메모리 용량 (bytes)
     * @type {number}
     * @memberof ClusterHypervisor
     */
    mem_total_bytes?: number;
    /**
     * 클러스터 Hypervisor 의 사용중인 메모리 용량 (bytes)
     * @type {number}
     * @memberof ClusterHypervisor
     */
    mem_used_bytes?: number;
    /**
     * 클러스터 Hypervisor 의 총 디스크 용량 (bytes)
     * @type {number}
     * @memberof ClusterHypervisor
     */
    disk_total_bytes?: number;
    /**
     * 클러스터 Hypervisor 의 사용중인 디스크 용량 (bytes)
     * @type {number}
     * @memberof ClusterHypervisor
     */
    disk_used_bytes?: number;
    /**
     * Hypervisor 상태
     * @type {string}
     * @memberof ClusterHypervisor
     */
    status?: ClusterHypervisorStatusEnum;
    /**
     * Hypervisor 상태
     * @type {string}
     * @memberof ClusterHypervisor
     */
    state?: ClusterHypervisorStateEnum;
    /**
     * 클러스터 Hypervisor SSH 접속 Port
     * @type {number}
     * @memberof ClusterHypervisor
     */
    ssh_port?: number;
    /**
     * 클러스터 Hypervisor SSH 접속 Account
     * @type {string}
     * @memberof ClusterHypervisor
     */
    ssh_account?: string;
    /**
     * 클러스터 Hypervisor SSH 접속 Password
     * @type {string}
     * @memberof ClusterHypervisor
     */
    ssh_password?: string;
    /**
     * Agent Bind Port
     * @type {number}
     * @memberof ClusterHypervisor
     */
    agent_port?: number;
    /**
     * Agent 버전
     * @type {string}
     * @memberof ClusterHypervisor
     */
    agent_version?: string;
    /**
     * Agemt 최초 설치 일시 (Timestamp)
     * @type {number}
     * @memberof ClusterHypervisor
     */
    agent_installed_at?: number;
    /**
     * Agemt 최종 업데이트 일시 (Timestamp)
     * @type {number}
     * @memberof ClusterHypervisor
     */
    agent_last_upgraded_at?: number;
}


/**
 * @export
 */
export const ClusterHypervisorTypeCodeEnum = {
    kvm: 'openstack.hypervisor.type.kvm',
    lxc: 'openstack.hypervisor.type.lxc',
    qemu: 'openstack.hypervisor.type.qemu',
    uml: 'openstack.hypervisor.type.uml',
    vmware: 'openstack.hypervisor.type.vmware',
    xen: 'openstack.hypervisor.type.xen',
    xenserver: 'openstack.hypervisor.type.xenserver',
    hyper_v: 'openstack.hypervisor.type.hyper-v',
    virtuozzo: 'openstack.hypervisor.type.virtuozzo'
} as const;
export type ClusterHypervisorTypeCodeEnum = typeof ClusterHypervisorTypeCodeEnum[keyof typeof ClusterHypervisorTypeCodeEnum];

/**
 * @export
 */
export const ClusterHypervisorStatusEnum = {
    enabled: 'enabled',
    disabled: 'disabled'
} as const;
export type ClusterHypervisorStatusEnum = typeof ClusterHypervisorStatusEnum[keyof typeof ClusterHypervisorStatusEnum];

/**
 * @export
 */
export const ClusterHypervisorStateEnum = {
    up: 'up',
    down: 'down'
} as const;
export type ClusterHypervisorStateEnum = typeof ClusterHypervisorStateEnum[keyof typeof ClusterHypervisorStateEnum];


/**
 * Check if a given object implements the ClusterHypervisor interface.
 */
export function instanceOfClusterHypervisor(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ClusterHypervisorFromJSON(json: any): ClusterHypervisor {
    return ClusterHypervisorFromJSONTyped(json, false);
}

export function ClusterHypervisorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClusterHypervisor {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'cluster': !exists(json, 'cluster') ? undefined : ClusterFromJSON(json['cluster']),
        'availability_zone': !exists(json, 'availability_zone') ? undefined : ClusterAvailabilityZoneFromJSON(json['availability_zone']),
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
        'type_code': !exists(json, 'type_code') ? undefined : json['type_code'],
        'hostname': !exists(json, 'hostname') ? undefined : json['hostname'],
        'ip_address': !exists(json, 'ip_address') ? undefined : json['ip_address'],
        'vcpu_total_cnt': !exists(json, 'vcpu_total_cnt') ? undefined : json['vcpu_total_cnt'],
        'vcpu_used_cnt': !exists(json, 'vcpu_used_cnt') ? undefined : json['vcpu_used_cnt'],
        'mem_total_bytes': !exists(json, 'mem_total_bytes') ? undefined : json['mem_total_bytes'],
        'mem_used_bytes': !exists(json, 'mem_used_bytes') ? undefined : json['mem_used_bytes'],
        'disk_total_bytes': !exists(json, 'disk_total_bytes') ? undefined : json['disk_total_bytes'],
        'disk_used_bytes': !exists(json, 'disk_used_bytes') ? undefined : json['disk_used_bytes'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'ssh_port': !exists(json, 'ssh_port') ? undefined : json['ssh_port'],
        'ssh_account': !exists(json, 'ssh_account') ? undefined : json['ssh_account'],
        'ssh_password': !exists(json, 'ssh_password') ? undefined : json['ssh_password'],
        'agent_port': !exists(json, 'agent_port') ? undefined : json['agent_port'],
        'agent_version': !exists(json, 'agent_version') ? undefined : json['agent_version'],
        'agent_installed_at': !exists(json, 'agent_installed_at') ? undefined : json['agent_installed_at'],
        'agent_last_upgraded_at': !exists(json, 'agent_last_upgraded_at') ? undefined : json['agent_last_upgraded_at'],
    };
}

export function ClusterHypervisorToJSON(value?: ClusterHypervisor | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'cluster': ClusterToJSON(value.cluster),
        'availability_zone': ClusterAvailabilityZoneToJSON(value.availability_zone),
        'uuid': value.uuid,
        'type_code': value.type_code,
        'hostname': value.hostname,
        'ip_address': value.ip_address,
        'vcpu_total_cnt': value.vcpu_total_cnt,
        'vcpu_used_cnt': value.vcpu_used_cnt,
        'mem_total_bytes': value.mem_total_bytes,
        'mem_used_bytes': value.mem_used_bytes,
        'disk_total_bytes': value.disk_total_bytes,
        'disk_used_bytes': value.disk_used_bytes,
        'status': value.status,
        'state': value.state,
        'ssh_port': value.ssh_port,
        'ssh_account': value.ssh_account,
        'ssh_password': value.ssh_password,
        'agent_port': value.agent_port,
        'agent_version': value.agent_version,
        'agent_installed_at': value.agent_installed_at,
        'agent_last_upgraded_at': value.agent_last_upgraded_at,
    };
}

