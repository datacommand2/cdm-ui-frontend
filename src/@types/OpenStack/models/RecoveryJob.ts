/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProtectionGroup } from './ProtectionGroup';
import {
    ProtectionGroupFromJSON,
    ProtectionGroupFromJSONTyped,
    ProtectionGroupToJSON,
} from './ProtectionGroup';
import type { ProtectionGroupSnapshot } from './ProtectionGroupSnapshot';
import {
    ProtectionGroupSnapshotFromJSON,
    ProtectionGroupSnapshotFromJSONTyped,
    ProtectionGroupSnapshotToJSON,
} from './ProtectionGroupSnapshot';
import type { RecoveryPlan } from './RecoveryPlan';
import {
    RecoveryPlanFromJSON,
    RecoveryPlanFromJSONTyped,
    RecoveryPlanToJSON,
} from './RecoveryPlan';
import type { Schedule } from './Schedule';
import {
    ScheduleFromJSON,
    ScheduleFromJSONTyped,
    ScheduleToJSON,
} from './Schedule';

/**
 * 재해복구작업
 * @export
 * @interface RecoveryJob
 */
export interface RecoveryJob {
    /**
     * 재해복구작업 ID
     * @type {number}
     * @memberof RecoveryJob
     */
    id?: number;
    /**
     * 
     * @type {ProtectionGroup}
     * @memberof RecoveryJob
     */
    group?: ProtectionGroup;
    /**
     * 
     * @type {RecoveryPlan}
     * @memberof RecoveryJob
     */
    plan?: RecoveryPlan;
    /**
     * 복구 유형
     * @type {string}
     * @memberof RecoveryJob
     */
    type_code?: RecoveryJobTypeCodeEnum;
    /**
     * 데이터 시점 유형
     * @type {string}
     * @memberof RecoveryJob
     */
    recovery_point_type_code?: RecoveryJobRecoveryPointTypeCodeEnum;
    /**
     * 
     * @type {ProtectionGroupSnapshot}
     * @memberof RecoveryJob
     */
    recovery_point_snapshot?: ProtectionGroupSnapshot;
    /**
     * 
     * @type {Schedule}
     * @memberof RecoveryJob
     */
    schedule?: Schedule;
    /**
     * 실행 예정시간
     * @type {number}
     * @memberof RecoveryJob
     */
    next_runtime?: number;
    /**
     * Operation
     * @type {string}
     * @memberof RecoveryJob
     */
    operation_code?: RecoveryJobOperationCodeEnum;
    /**
     * 작업 상태
     * @type {string}
     * @memberof RecoveryJob
     */
    state_code?: RecoveryJobStateCodeEnum;
    /**
     * 작업 생성일시
     * @type {number}
     * @memberof RecoveryJob
     */
    created_at?: number;
    /**
     * 작업 수정일시
     * @type {number}
     * @memberof RecoveryJob
     */
    updated_at?: number;
}


/**
 * @export
 */
export const RecoveryJobTypeCodeEnum = {
    simulation: 'dr.recovery.type.simulation',
    migration: 'dr.recovery.type.migration'
} as const;
export type RecoveryJobTypeCodeEnum = typeof RecoveryJobTypeCodeEnum[keyof typeof RecoveryJobTypeCodeEnum];

/**
 * @export
 */
export const RecoveryJobRecoveryPointTypeCodeEnum = {
    latest: 'dr.recovery.recovery_point.type.latest',
    latest_snapshot: 'dr.recovery.recovery_point.type.latest_snapshot',
    snapshot: 'dr.recovery.recovery_point.type.snapshot'
} as const;
export type RecoveryJobRecoveryPointTypeCodeEnum = typeof RecoveryJobRecoveryPointTypeCodeEnum[keyof typeof RecoveryJobRecoveryPointTypeCodeEnum];

/**
 * @export
 */
export const RecoveryJobOperationCodeEnum = {
    run: 'run',
    pause: 'pause',
    cancel: 'cancel',
    retry: 'retry',
    rollback: 'rollback',
    retry_rollback: 'retry-rollback',
    ignore_rollback: 'ignore-rollback',
    confirm: 'confirm',
    retry_confirm: 'retry-confirm',
    cancel_confirm: 'cancel-confirm'
} as const;
export type RecoveryJobOperationCodeEnum = typeof RecoveryJobOperationCodeEnum[keyof typeof RecoveryJobOperationCodeEnum];

/**
 * @export
 */
export const RecoveryJobStateCodeEnum = {
    waiting: 'dr.recovery.job.state.waiting',
    pending: 'dr.recovery.job.state.pending',
    running: 'dr.recovery.job.state.running',
    canceling: 'dr.recovery.job.state.canceling',
    paused: 'dr.recovery.job.state.paused',
    completed: 'dr.recovery.job.state.completed',
    clearing: 'dr.recovery.job.state.clearing',
    clear_failed: 'dr.recovery.job.state.clear-failed',
    reporting: 'dr.recovery.job.state.reporting',
    finished: 'dr.recovery.job.state.finished'
} as const;
export type RecoveryJobStateCodeEnum = typeof RecoveryJobStateCodeEnum[keyof typeof RecoveryJobStateCodeEnum];


/**
 * Check if a given object implements the RecoveryJob interface.
 */
export function instanceOfRecoveryJob(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RecoveryJobFromJSON(json: any): RecoveryJob {
    return RecoveryJobFromJSONTyped(json, false);
}

export function RecoveryJobFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecoveryJob {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'group': !exists(json, 'group') ? undefined : ProtectionGroupFromJSON(json['group']),
        'plan': !exists(json, 'plan') ? undefined : RecoveryPlanFromJSON(json['plan']),
        'type_code': !exists(json, 'type_code') ? undefined : json['type_code'],
        'recovery_point_type_code': !exists(json, 'recovery_point_type_code') ? undefined : json['recovery_point_type_code'],
        'recovery_point_snapshot': !exists(json, 'recovery_point_snapshot') ? undefined : ProtectionGroupSnapshotFromJSON(json['recovery_point_snapshot']),
        'schedule': !exists(json, 'schedule') ? undefined : ScheduleFromJSON(json['schedule']),
        'next_runtime': !exists(json, 'next_runtime') ? undefined : json['next_runtime'],
        'operation_code': !exists(json, 'operation_code') ? undefined : json['operation_code'],
        'state_code': !exists(json, 'state_code') ? undefined : json['state_code'],
        'created_at': !exists(json, 'created_at') ? undefined : json['created_at'],
        'updated_at': !exists(json, 'updated_at') ? undefined : json['updated_at'],
    };
}

export function RecoveryJobToJSON(value?: RecoveryJob | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'group': ProtectionGroupToJSON(value.group),
        'plan': RecoveryPlanToJSON(value.plan),
        'type_code': value.type_code,
        'recovery_point_type_code': value.recovery_point_type_code,
        'recovery_point_snapshot': ProtectionGroupSnapshotToJSON(value.recovery_point_snapshot),
        'schedule': ScheduleToJSON(value.schedule),
        'next_runtime': value.next_runtime,
        'operation_code': value.operation_code,
        'state_code': value.state_code,
        'created_at': value.created_at,
        'updated_at': value.updated_at,
    };
}

