/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AvailabilityZoneRecoveryPlan } from './AvailabilityZoneRecoveryPlan';
import {
    AvailabilityZoneRecoveryPlanFromJSON,
    AvailabilityZoneRecoveryPlanFromJSONTyped,
    AvailabilityZoneRecoveryPlanToJSON,
} from './AvailabilityZoneRecoveryPlan';
import type { ExternalNetworkRecoveryPlan } from './ExternalNetworkRecoveryPlan';
import {
    ExternalNetworkRecoveryPlanFromJSON,
    ExternalNetworkRecoveryPlanFromJSONTyped,
    ExternalNetworkRecoveryPlanToJSON,
} from './ExternalNetworkRecoveryPlan';
import type { FloatingIPRecoveryPlan } from './FloatingIPRecoveryPlan';
import {
    FloatingIPRecoveryPlanFromJSON,
    FloatingIPRecoveryPlanFromJSONTyped,
    FloatingIPRecoveryPlanToJSON,
} from './FloatingIPRecoveryPlan';
import type { InstanceRecoveryPlan } from './InstanceRecoveryPlan';
import {
    InstanceRecoveryPlanFromJSON,
    InstanceRecoveryPlanFromJSONTyped,
    InstanceRecoveryPlanToJSON,
} from './InstanceRecoveryPlan';
import type { RouterRecoveryPlan } from './RouterRecoveryPlan';
import {
    RouterRecoveryPlanFromJSON,
    RouterRecoveryPlanFromJSONTyped,
    RouterRecoveryPlanToJSON,
} from './RouterRecoveryPlan';
import type { StorageRecoveryPlan } from './StorageRecoveryPlan';
import {
    StorageRecoveryPlanFromJSON,
    StorageRecoveryPlanFromJSONTyped,
    StorageRecoveryPlanToJSON,
} from './StorageRecoveryPlan';
import type { TenantRecoveryPlan } from './TenantRecoveryPlan';
import {
    TenantRecoveryPlanFromJSON,
    TenantRecoveryPlanFromJSONTyped,
    TenantRecoveryPlanToJSON,
} from './TenantRecoveryPlan';
import type { VolumeRecoveryPlan } from './VolumeRecoveryPlan';
import {
    VolumeRecoveryPlanFromJSON,
    VolumeRecoveryPlanFromJSONTyped,
    VolumeRecoveryPlanToJSON,
} from './VolumeRecoveryPlan';

/**
 * 재해복구계획 상세
 * @export
 * @interface RecoveryPlanDetail
 */
export interface RecoveryPlanDetail {
    /**
     * 테넌트 복구계획
     * @type {Array<TenantRecoveryPlan>}
     * @memberof RecoveryPlanDetail
     */
    tenants?: Array<TenantRecoveryPlan>;
    /**
     * 가용구역 복구계획
     * @type {Array<AvailabilityZoneRecoveryPlan>}
     * @memberof RecoveryPlanDetail
     */
    availability_zones?: Array<AvailabilityZoneRecoveryPlan>;
    /**
     * 외부 네트워크 복구계획
     * @type {Array<ExternalNetworkRecoveryPlan>}
     * @memberof RecoveryPlanDetail
     */
    external_networks?: Array<ExternalNetworkRecoveryPlan>;
    /**
     * 라우터 복구계획
     * @type {Array<RouterRecoveryPlan>}
     * @memberof RecoveryPlanDetail
     */
    routers?: Array<RouterRecoveryPlan>;
    /**
     * 볼륨타입 복구계획
     * @type {Array<StorageRecoveryPlan>}
     * @memberof RecoveryPlanDetail
     */
    storages?: Array<StorageRecoveryPlan>;
    /**
     * 인스턴스 복구계획
     * @type {Array<InstanceRecoveryPlan>}
     * @memberof RecoveryPlanDetail
     */
    instances?: Array<InstanceRecoveryPlan>;
    /**
     * Floating IP 복구계획
     * @type {Array<FloatingIPRecoveryPlan>}
     * @memberof RecoveryPlanDetail
     */
    floating_ips?: Array<FloatingIPRecoveryPlan>;
    /**
     * 볼륨 복구계획
     * @type {Array<VolumeRecoveryPlan>}
     * @memberof RecoveryPlanDetail
     */
    volumes?: Array<VolumeRecoveryPlan>;
}

/**
 * Check if a given object implements the RecoveryPlanDetail interface.
 */
export function instanceOfRecoveryPlanDetail(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RecoveryPlanDetailFromJSON(json: any): RecoveryPlanDetail {
    return RecoveryPlanDetailFromJSONTyped(json, false);
}

export function RecoveryPlanDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecoveryPlanDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tenants': !exists(json, 'tenants') ? undefined : ((json['tenants'] as Array<any>).map(TenantRecoveryPlanFromJSON)),
        'availability_zones': !exists(json, 'availability_zones') ? undefined : ((json['availability_zones'] as Array<any>).map(AvailabilityZoneRecoveryPlanFromJSON)),
        'external_networks': !exists(json, 'external_networks') ? undefined : ((json['external_networks'] as Array<any>).map(ExternalNetworkRecoveryPlanFromJSON)),
        'routers': !exists(json, 'routers') ? undefined : ((json['routers'] as Array<any>).map(RouterRecoveryPlanFromJSON)),
        'storages': !exists(json, 'storages') ? undefined : ((json['storages'] as Array<any>).map(StorageRecoveryPlanFromJSON)),
        'instances': !exists(json, 'instances') ? undefined : ((json['instances'] as Array<any>).map(InstanceRecoveryPlanFromJSON)),
        'floating_ips': !exists(json, 'floating_ips') ? undefined : ((json['floating_ips'] as Array<any>).map(FloatingIPRecoveryPlanFromJSON)),
        'volumes': !exists(json, 'volumes') ? undefined : ((json['volumes'] as Array<any>).map(VolumeRecoveryPlanFromJSON)),
    };
}

export function RecoveryPlanDetailToJSON(value?: RecoveryPlanDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tenants': value.tenants === undefined ? undefined : ((value.tenants as Array<any>).map(TenantRecoveryPlanToJSON)),
        'availability_zones': value.availability_zones === undefined ? undefined : ((value.availability_zones as Array<any>).map(AvailabilityZoneRecoveryPlanToJSON)),
        'external_networks': value.external_networks === undefined ? undefined : ((value.external_networks as Array<any>).map(ExternalNetworkRecoveryPlanToJSON)),
        'routers': value.routers === undefined ? undefined : ((value.routers as Array<any>).map(RouterRecoveryPlanToJSON)),
        'storages': value.storages === undefined ? undefined : ((value.storages as Array<any>).map(StorageRecoveryPlanToJSON)),
        'instances': value.instances === undefined ? undefined : ((value.instances as Array<any>).map(InstanceRecoveryPlanToJSON)),
        'floating_ips': value.floating_ips === undefined ? undefined : ((value.floating_ips as Array<any>).map(FloatingIPRecoveryPlanToJSON)),
        'volumes': value.volumes === undefined ? undefined : ((value.volumes as Array<any>).map(VolumeRecoveryPlanToJSON)),
    };
}

