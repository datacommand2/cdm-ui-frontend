/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ClusterVolume } from './ClusterVolume';
import {
    ClusterVolumeFromJSON,
    ClusterVolumeFromJSONTyped,
    ClusterVolumeToJSON,
} from './ClusterVolume';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
} from './Message';

/**
 * 
 * @export
 * @interface VolumeRecoveryResult
 */
export interface VolumeRecoveryResult {
    /**
     * 
     * @type {ClusterVolume}
     * @memberof VolumeRecoveryResult
     */
    protection_cluster_volume?: ClusterVolume;
    /**
     * 
     * @type {ClusterVolume}
     * @memberof VolumeRecoveryResult
     */
    recovery_cluster_volume?: ClusterVolume;
    /**
     * 데이터 시점 유형
     * @type {string}
     * @memberof VolumeRecoveryResult
     */
    recovery_point_type_code?: VolumeRecoveryResultRecoveryPointTypeCodeEnum;
    /**
     * 복구 데이터 시점
     * @type {number}
     * @memberof VolumeRecoveryResult
     */
    recovery_point?: number;
    /**
     * 복구 시작 일시
     * @type {number}
     * @memberof VolumeRecoveryResult
     */
    started_at?: number;
    /**
     * 복구 종료 일시
     * @type {number}
     * @memberof VolumeRecoveryResult
     */
    finished_at?: number;
    /**
     * 복구 결과
     * @type {string}
     * @memberof VolumeRecoveryResult
     */
    result_code?: VolumeRecoveryResultResultCodeEnum;
    /**
     * 
     * @type {Message}
     * @memberof VolumeRecoveryResult
     */
    failed_reason?: Message;
    /**
     * 롤백 여부
     * @type {boolean}
     * @memberof VolumeRecoveryResult
     */
    rollback_flag?: boolean;
}


/**
 * @export
 */
export const VolumeRecoveryResultRecoveryPointTypeCodeEnum = {
    latest: 'dr.recovery.recovery_point.type.latest',
    latest_snapshot: 'dr.recovery.recovery_point.type.latest_snapshot',
    snapshot: 'dr.recovery.recovery_point.type.snapshot'
} as const;
export type VolumeRecoveryResultRecoveryPointTypeCodeEnum = typeof VolumeRecoveryResultRecoveryPointTypeCodeEnum[keyof typeof VolumeRecoveryResultRecoveryPointTypeCodeEnum];

/**
 * @export
 */
export const VolumeRecoveryResultResultCodeEnum = {
    success: 'dr.recovery.volume.result.success',
    failed: 'dr.recovery.volume.result.failed',
    canceled: 'dr.recovery.volume.result.canceled'
} as const;
export type VolumeRecoveryResultResultCodeEnum = typeof VolumeRecoveryResultResultCodeEnum[keyof typeof VolumeRecoveryResultResultCodeEnum];


/**
 * Check if a given object implements the VolumeRecoveryResult interface.
 */
export function instanceOfVolumeRecoveryResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VolumeRecoveryResultFromJSON(json: any): VolumeRecoveryResult {
    return VolumeRecoveryResultFromJSONTyped(json, false);
}

export function VolumeRecoveryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): VolumeRecoveryResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'protection_cluster_volume': !exists(json, 'protection_cluster_volume') ? undefined : ClusterVolumeFromJSON(json['protection_cluster_volume']),
        'recovery_cluster_volume': !exists(json, 'recovery_cluster_volume') ? undefined : ClusterVolumeFromJSON(json['recovery_cluster_volume']),
        'recovery_point_type_code': !exists(json, 'recovery_point_type_code') ? undefined : json['recovery_point_type_code'],
        'recovery_point': !exists(json, 'recovery_point') ? undefined : json['recovery_point'],
        'started_at': !exists(json, 'started_at') ? undefined : json['started_at'],
        'finished_at': !exists(json, 'finished_at') ? undefined : json['finished_at'],
        'result_code': !exists(json, 'result_code') ? undefined : json['result_code'],
        'failed_reason': !exists(json, 'failed_reason') ? undefined : MessageFromJSON(json['failed_reason']),
        'rollback_flag': !exists(json, 'rollback_flag') ? undefined : json['rollback_flag'],
    };
}

export function VolumeRecoveryResultToJSON(value?: VolumeRecoveryResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'protection_cluster_volume': ClusterVolumeToJSON(value.protection_cluster_volume),
        'recovery_cluster_volume': ClusterVolumeToJSON(value.recovery_cluster_volume),
        'recovery_point_type_code': value.recovery_point_type_code,
        'recovery_point': value.recovery_point,
        'started_at': value.started_at,
        'finished_at': value.finished_at,
        'result_code': value.result_code,
        'failed_reason': MessageToJSON(value.failed_reason),
        'rollback_flag': value.rollback_flag,
    };
}

