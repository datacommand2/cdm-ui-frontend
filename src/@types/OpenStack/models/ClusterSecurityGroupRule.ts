/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ClusterSecurityGroup } from './ClusterSecurityGroup';
import {
    ClusterSecurityGroupFromJSON,
    ClusterSecurityGroupFromJSONTyped,
    ClusterSecurityGroupToJSON,
} from './ClusterSecurityGroup';

/**
 * 클러스터 보안그룹 규칙
 * @export
 * @interface ClusterSecurityGroupRule
 */
export interface ClusterSecurityGroupRule {
    /**
     * 클러스터 보안그룹 규칙의 ID
     * @type {number}
     * @memberof ClusterSecurityGroupRule
     */
    id?: number;
    /**
     * 
     * @type {ClusterSecurityGroup}
     * @memberof ClusterSecurityGroupRule
     */
    remote_security_group?: ClusterSecurityGroup;
    /**
     * 클러스터에서의 보안그룹 규칙 ID
     * @type {string}
     * @memberof ClusterSecurityGroupRule
     */
    uuid?: string;
    /**
     * 클러스터 보안그룹 규칙의 설명
     * @type {string}
     * @memberof ClusterSecurityGroupRule
     */
    description?: string;
    /**
     * 이더넷 타입
     * @type {ClusterSecurityGroupRuleEtherTypeEnum}
     * @memberof ClusterSecurityGroupRule
     */
    ether_type?: ClusterSecurityGroupRuleEtherTypeEnum;
    /**
     * 네트워크 CIDR
     * @type {string}
     * @memberof ClusterSecurityGroupRule
     */
    network_cidr?: string;
    /**
     * 규칙 방향
     * @type {string}
     * @memberof ClusterSecurityGroupRule
     */
    direction?: ClusterSecurityGroupRuleDirectionEnum;
    /**
     * 포트 범위 최대 값
     * @type {number}
     * @memberof ClusterSecurityGroupRule
     */
    port_range_max?: number;
    /**
     * 포트 범위 최소 값
     * @type {number}
     * @memberof ClusterSecurityGroupRule
     */
    port_range_min?: number;
    /**
     * 프로토콜
     * 
     * The IP protocol can be represented by a string, an integer, or null. Valid string or integer values are any or 0, ah or 51, dccp or 33, egp or 8, esp or 50, gre or 47, icmp or 1, icmpv6 or 58, igmp or 2, ipip or 4, ipv6-encap or 41, ipv6-frag or 44, ipv6-icmp or 58, ipv6-nonxt or 59, ipv6-opts or 60, ipv6-route or 43, ospf or 89, pgm or 113, rsvp or 46, sctp or 132, tcp or 6, udp or 17, udplite or 136, vrrp or 112. Additionally, any integer value between [0-255] is also valid. The string any (or integer 0) means all IP protocols. See the constants in neutron_lib.constants for the most up-to-date list of supported strings.
     * 
     * @type {string}
     * @memberof ClusterSecurityGroupRule
     */
    protocol?: string;
}


/**
 * @export
 */
export const ClusterSecurityGroupRuleEtherTypeEnum = {
    _4: 4,
    _6: 6
} as const;
export type ClusterSecurityGroupRuleEtherTypeEnum = typeof ClusterSecurityGroupRuleEtherTypeEnum[keyof typeof ClusterSecurityGroupRuleEtherTypeEnum];

/**
 * @export
 */
export const ClusterSecurityGroupRuleDirectionEnum = {
    ingress: 'ingress',
    egress: 'egress'
} as const;
export type ClusterSecurityGroupRuleDirectionEnum = typeof ClusterSecurityGroupRuleDirectionEnum[keyof typeof ClusterSecurityGroupRuleDirectionEnum];


/**
 * Check if a given object implements the ClusterSecurityGroupRule interface.
 */
export function instanceOfClusterSecurityGroupRule(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ClusterSecurityGroupRuleFromJSON(json: any): ClusterSecurityGroupRule {
    return ClusterSecurityGroupRuleFromJSONTyped(json, false);
}

export function ClusterSecurityGroupRuleFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClusterSecurityGroupRule {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'remote_security_group': !exists(json, 'remote_security_group') ? undefined : ClusterSecurityGroupFromJSON(json['remote_security_group']),
        'uuid': !exists(json, 'uuid') ? undefined : json['uuid'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'ether_type': !exists(json, 'ether_type') ? undefined : json['ether_type'],
        'network_cidr': !exists(json, 'network_cidr') ? undefined : json['network_cidr'],
        'direction': !exists(json, 'direction') ? undefined : json['direction'],
        'port_range_max': !exists(json, 'port_range_max') ? undefined : json['port_range_max'],
        'port_range_min': !exists(json, 'port_range_min') ? undefined : json['port_range_min'],
        'protocol': !exists(json, 'protocol') ? undefined : json['protocol'],
    };
}

export function ClusterSecurityGroupRuleToJSON(value?: ClusterSecurityGroupRule | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'remote_security_group': ClusterSecurityGroupToJSON(value.remote_security_group),
        'uuid': value.uuid,
        'description': value.description,
        'ether_type': value.ether_type,
        'network_cidr': value.network_cidr,
        'direction': value.direction,
        'port_range_max': value.port_range_max,
        'port_range_min': value.port_range_min,
        'protocol': value.protocol,
    };
}

