/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ClusterAvailabilityZone } from './ClusterAvailabilityZone';
import {
    ClusterAvailabilityZoneFromJSON,
    ClusterAvailabilityZoneFromJSONTyped,
    ClusterAvailabilityZoneToJSON,
} from './ClusterAvailabilityZone';
import type { ClusterHypervisor } from './ClusterHypervisor';
import {
    ClusterHypervisorFromJSON,
    ClusterHypervisorFromJSONTyped,
    ClusterHypervisorToJSON,
} from './ClusterHypervisor';
import type { ClusterInstance } from './ClusterInstance';
import {
    ClusterInstanceFromJSON,
    ClusterInstanceFromJSONTyped,
    ClusterInstanceToJSON,
} from './ClusterInstance';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
} from './Message';

/**
 * 인스턴스 복구계획
 * @export
 * @interface InstanceRecoveryPlan
 */
export interface InstanceRecoveryPlan {
    /**
     * 복구 유형 (미러링만 지원)
     * @type {string}
     * @memberof InstanceRecoveryPlan
     */
    recovery_type_code?: InstanceRecoveryPlanRecoveryTypeCodeEnum;
    /**
     * 
     * @type {ClusterInstance}
     * @memberof InstanceRecoveryPlan
     */
    protection_cluster_instance?: ClusterInstance;
    /**
     * 
     * @type {ClusterAvailabilityZone}
     * @memberof InstanceRecoveryPlan
     */
    recovery_cluster_availability_zone?: ClusterAvailabilityZone;
    /**
     * 가용구역 변경 필요 여부
     * @type {boolean}
     * @memberof InstanceRecoveryPlan
     */
    recovery_cluster_availability_zone_update_flag?: boolean;
    /**
     * 
     * @type {Message}
     * @memberof InstanceRecoveryPlan
     */
    recovery_cluster_availability_zone_update_reason?: Message;
    /**
     * 
     * @type {ClusterHypervisor}
     * @memberof InstanceRecoveryPlan
     */
    recovery_cluster_hypervisor?: ClusterHypervisor;
    /**
     * 재해복구시 기동 여부
     * @type {boolean}
     * @memberof InstanceRecoveryPlan
     */
    auto_start_flag?: boolean;
    /**
     * 재해복구 기동 후 정상동작 확인 여부
     * @type {boolean}
     * @memberof InstanceRecoveryPlan
     */
    diagnosis_flag?: boolean;
    /**
     * 재해복구 기동 후 정상동작 확인 방법
     * @type {string}
     * @memberof InstanceRecoveryPlan
     */
    diagnosis_method_code?: InstanceRecoveryPlanDiagnosisMethodCodeEnum;
    /**
     * 재해복구 기동 후 정상동작 확인 방법 데이터
     * @type {string}
     * @memberof InstanceRecoveryPlan
     */
    diagnosis_method_data?: string;
    /**
     * 재해복구 기동 후 정상동작 확인 대기 시간 (초)
     * @type {number}
     * @memberof InstanceRecoveryPlan
     */
    diagnosis_timeout?: number;
    /**
     * 의존하는 인스턴스 목록
     * @type {Array<ClusterInstance>}
     * @memberof InstanceRecoveryPlan
     */
    dependencies?: Array<ClusterInstance>;
}


/**
 * @export
 */
export const InstanceRecoveryPlanRecoveryTypeCodeEnum = {
    dr_recovery_plan_instance_recovery_type_mirroring: 'dr.recovery.plan.instance.recovery.type.mirroring'
} as const;
export type InstanceRecoveryPlanRecoveryTypeCodeEnum = typeof InstanceRecoveryPlanRecoveryTypeCodeEnum[keyof typeof InstanceRecoveryPlanRecoveryTypeCodeEnum];

/**
 * @export
 */
export const InstanceRecoveryPlanDiagnosisMethodCodeEnum = {
    shell_script: 'dr.recovery.plan.instance.diagnosis.method.shell-script',
    port_scan: 'dr.recovery.plan.instance.diagnosis.method.port-scan',
    http_get: 'dr.recovery.plan.instance.diagnosis.method.http-get'
} as const;
export type InstanceRecoveryPlanDiagnosisMethodCodeEnum = typeof InstanceRecoveryPlanDiagnosisMethodCodeEnum[keyof typeof InstanceRecoveryPlanDiagnosisMethodCodeEnum];


/**
 * Check if a given object implements the InstanceRecoveryPlan interface.
 */
export function instanceOfInstanceRecoveryPlan(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InstanceRecoveryPlanFromJSON(json: any): InstanceRecoveryPlan {
    return InstanceRecoveryPlanFromJSONTyped(json, false);
}

export function InstanceRecoveryPlanFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstanceRecoveryPlan {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'recovery_type_code': !exists(json, 'recovery_type_code') ? undefined : json['recovery_type_code'],
        'protection_cluster_instance': !exists(json, 'protection_cluster_instance') ? undefined : ClusterInstanceFromJSON(json['protection_cluster_instance']),
        'recovery_cluster_availability_zone': !exists(json, 'recovery_cluster_availability_zone') ? undefined : ClusterAvailabilityZoneFromJSON(json['recovery_cluster_availability_zone']),
        'recovery_cluster_availability_zone_update_flag': !exists(json, 'recovery_cluster_availability_zone_update_flag') ? undefined : json['recovery_cluster_availability_zone_update_flag'],
        'recovery_cluster_availability_zone_update_reason': !exists(json, 'recovery_cluster_availability_zone_update_reason') ? undefined : MessageFromJSON(json['recovery_cluster_availability_zone_update_reason']),
        'recovery_cluster_hypervisor': !exists(json, 'recovery_cluster_hypervisor') ? undefined : ClusterHypervisorFromJSON(json['recovery_cluster_hypervisor']),
        'auto_start_flag': !exists(json, 'auto_start_flag') ? undefined : json['auto_start_flag'],
        'diagnosis_flag': !exists(json, 'diagnosis_flag') ? undefined : json['diagnosis_flag'],
        'diagnosis_method_code': !exists(json, 'diagnosis_method_code') ? undefined : json['diagnosis_method_code'],
        'diagnosis_method_data': !exists(json, 'diagnosis_method_data') ? undefined : json['diagnosis_method_data'],
        'diagnosis_timeout': !exists(json, 'diagnosis_timeout') ? undefined : json['diagnosis_timeout'],
        'dependencies': !exists(json, 'dependencies') ? undefined : ((json['dependencies'] as Array<any>).map(ClusterInstanceFromJSON)),
    };
}

export function InstanceRecoveryPlanToJSON(value?: InstanceRecoveryPlan | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'recovery_type_code': value.recovery_type_code,
        'protection_cluster_instance': ClusterInstanceToJSON(value.protection_cluster_instance),
        'recovery_cluster_availability_zone': ClusterAvailabilityZoneToJSON(value.recovery_cluster_availability_zone),
        'recovery_cluster_availability_zone_update_flag': value.recovery_cluster_availability_zone_update_flag,
        'recovery_cluster_availability_zone_update_reason': MessageToJSON(value.recovery_cluster_availability_zone_update_reason),
        'recovery_cluster_hypervisor': ClusterHypervisorToJSON(value.recovery_cluster_hypervisor),
        'auto_start_flag': value.auto_start_flag,
        'diagnosis_flag': value.diagnosis_flag,
        'diagnosis_method_code': value.diagnosis_method_code,
        'diagnosis_method_data': value.diagnosis_method_data,
        'diagnosis_timeout': value.diagnosis_timeout,
        'dependencies': value.dependencies === undefined ? undefined : ((value.dependencies as Array<any>).map(ClusterInstanceToJSON)),
    };
}

