/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AbnormalStateReasons } from './AbnormalStateReasons';
import {
    AbnormalStateReasonsFromJSON,
    AbnormalStateReasonsFromJSONTyped,
    AbnormalStateReasonsToJSON,
} from './AbnormalStateReasons';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
} from './Message';

/**
 * 
 * @export
 * @interface RecoveryGroupsGroupIdPlansPost412Response
 */
export interface RecoveryGroupsGroupIdPlansPost412Response {
    /**
     * 
     * @type {Array<AbnormalStateReasons>}
     * @memberof RecoveryGroupsGroupIdPlansPost412Response
     */
    reasons?: Array<AbnormalStateReasons>;
    /**
     * 
     * @type {Message}
     * @memberof RecoveryGroupsGroupIdPlansPost412Response
     */
    message?: Message;
}

/**
 * Check if a given object implements the RecoveryGroupsGroupIdPlansPost412Response interface.
 */
export function instanceOfRecoveryGroupsGroupIdPlansPost412Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RecoveryGroupsGroupIdPlansPost412ResponseFromJSON(json: any): RecoveryGroupsGroupIdPlansPost412Response {
    return RecoveryGroupsGroupIdPlansPost412ResponseFromJSONTyped(json, false);
}

export function RecoveryGroupsGroupIdPlansPost412ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecoveryGroupsGroupIdPlansPost412Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reasons': !exists(json, 'reasons') ? undefined : ((json['reasons'] as Array<any>).map(AbnormalStateReasonsFromJSON)),
        'message': !exists(json, 'message') ? undefined : MessageFromJSON(json['message']),
    };
}

export function RecoveryGroupsGroupIdPlansPost412ResponseToJSON(value?: RecoveryGroupsGroupIdPlansPost412Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'reasons': value.reasons === undefined ? undefined : ((value.reasons as Array<any>).map(AbnormalStateReasonsToJSON)),
        'message': MessageToJSON(value.message),
    };
}

