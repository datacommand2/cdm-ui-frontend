/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RecoveryGroupsGroupIdDelete200Response,
  RecoveryHistoryGet200Response,
  RecoveryHistoryGroupIdReportsGroupNameListGet200Response,
  RecoveryHistoryGroupIdReportsResultIdDetailGet200Response,
} from '../models/index';
import {
    RecoveryGroupsGroupIdDelete200ResponseFromJSON,
    RecoveryGroupsGroupIdDelete200ResponseToJSON,
    RecoveryHistoryGet200ResponseFromJSON,
    RecoveryHistoryGet200ResponseToJSON,
    RecoveryHistoryGroupIdReportsGroupNameListGet200ResponseFromJSON,
    RecoveryHistoryGroupIdReportsGroupNameListGet200ResponseToJSON,
    RecoveryHistoryGroupIdReportsResultIdDetailGet200ResponseFromJSON,
    RecoveryHistoryGroupIdReportsResultIdDetailGet200ResponseToJSON,
} from '../models/index';

export interface RecoveryHistoryGroupIdReportsGroupNameListGetRequest {
    group_id: number;
    group_name: string;
    limit?: number;
    offset?: number;
    type?: RecoveryHistoryGroupIdReportsGroupNameListGetTypeEnum;
    result?: RecoveryHistoryGroupIdReportsGroupNameListGetResultEnum;
}

export interface RecoveryHistoryGroupIdReportsResultIdDeleteRequest {
    group_id: number;
    result_id: number;
}

export interface RecoveryHistoryGroupIdReportsResultIdDetailGetRequest {
    group_id: number;
    result_id: number;
}

/**
 * RecoveryReportApi - interface
 * 
 * @export
 * @interface RecoveryReportApiInterface
 */
export interface RecoveryReportApiInterface {
    /**
     * 설명추가
     * @summary 보호그룹 history 조회
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecoveryReportApiInterface
     */
    recoveryHistoryGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryHistoryGet200Response>>;

    /**
     * 설명추가
     * 보호그룹 history 조회
     */
    recoveryHistoryGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryHistoryGet200Response>;

    /**
     * 설명추가
     * @summary 재해복구결과 보고서 목록 조회
     * @param {number} group_id 보호그룹 ID
     * @param {string} group_name 보호그룹 Name
     * @param {number} [limit] 한 페이지에 표시할 항목 개수
     * @param {number} [offset] 페이지에 표시할 항목 인덱스
     * @param {'dr.recovery.type.simulation' | 'dr.recovery.type.migration'} [type] 복구 유형
     * @param {'dr.recovery.result.success' | 'dr.recovery.result.partial_success' | 'dr.recovery.result.failed' | 'dr.recovery.result.canceled'} [result] 복구 결과
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecoveryReportApiInterface
     */
    recoveryHistoryGroupIdReportsGroupNameListGetRaw(requestParameters: RecoveryHistoryGroupIdReportsGroupNameListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryHistoryGroupIdReportsGroupNameListGet200Response>>;

    /**
     * 설명추가
     * 재해복구결과 보고서 목록 조회
     */
    recoveryHistoryGroupIdReportsGroupNameListGet(requestParameters: RecoveryHistoryGroupIdReportsGroupNameListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryHistoryGroupIdReportsGroupNameListGet200Response>;

    /**
     * 설명추가
     * @summary 재해복구결과 보고서 삭제 (모의훈련)
     * @param {number} group_id 보호그룹 ID
     * @param {number} result_id 재해복구결과 보고서 ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecoveryReportApiInterface
     */
    recoveryHistoryGroupIdReportsResultIdDeleteRaw(requestParameters: RecoveryHistoryGroupIdReportsResultIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryGroupsGroupIdDelete200Response>>;

    /**
     * 설명추가
     * 재해복구결과 보고서 삭제 (모의훈련)
     */
    recoveryHistoryGroupIdReportsResultIdDelete(requestParameters: RecoveryHistoryGroupIdReportsResultIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryGroupsGroupIdDelete200Response>;

    /**
     * 설명추가
     * @summary 재해복구결과 보고서 조회
     * @param {number} group_id 보호그룹 ID
     * @param {number} result_id 재해복구결과 보고서 ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecoveryReportApiInterface
     */
    recoveryHistoryGroupIdReportsResultIdDetailGetRaw(requestParameters: RecoveryHistoryGroupIdReportsResultIdDetailGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryHistoryGroupIdReportsResultIdDetailGet200Response>>;

    /**
     * 설명추가
     * 재해복구결과 보고서 조회
     */
    recoveryHistoryGroupIdReportsResultIdDetailGet(requestParameters: RecoveryHistoryGroupIdReportsResultIdDetailGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryHistoryGroupIdReportsResultIdDetailGet200Response>;

}

/**
 * 
 */
export class RecoveryReportApi extends runtime.BaseAPI implements RecoveryReportApiInterface {

    /**
     * 설명추가
     * 보호그룹 history 조회
     */
    async recoveryHistoryGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryHistoryGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/recovery/history`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RecoveryHistoryGet200ResponseFromJSON(jsonValue));
    }

    /**
     * 설명추가
     * 보호그룹 history 조회
     */
    async recoveryHistoryGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryHistoryGet200Response> {
        const response = await this.recoveryHistoryGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * 설명추가
     * 재해복구결과 보고서 목록 조회
     */
    async recoveryHistoryGroupIdReportsGroupNameListGetRaw(requestParameters: RecoveryHistoryGroupIdReportsGroupNameListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryHistoryGroupIdReportsGroupNameListGet200Response>> {
        if (requestParameters.group_id === null || requestParameters.group_id === undefined) {
            throw new runtime.RequiredError('group_id','Required parameter requestParameters.group_id was null or undefined when calling recoveryHistoryGroupIdReportsGroupNameListGet.');
        }

        if (requestParameters.group_name === null || requestParameters.group_name === undefined) {
            throw new runtime.RequiredError('group_name','Required parameter requestParameters.group_name was null or undefined when calling recoveryHistoryGroupIdReportsGroupNameListGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.offset !== undefined) {
            queryParameters['offset'] = requestParameters.offset;
        }

        if (requestParameters.type !== undefined) {
            queryParameters['type'] = requestParameters.type;
        }

        if (requestParameters.result !== undefined) {
            queryParameters['result'] = requestParameters.result;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/recovery/history/{group_id}/reports/{group_name}/list`.replace(`{${"group_id"}}`, encodeURIComponent(String(requestParameters.group_id))).replace(`{${"group_name"}}`, encodeURIComponent(String(requestParameters.group_name))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RecoveryHistoryGroupIdReportsGroupNameListGet200ResponseFromJSON(jsonValue));
    }

    /**
     * 설명추가
     * 재해복구결과 보고서 목록 조회
     */
    async recoveryHistoryGroupIdReportsGroupNameListGet(requestParameters: RecoveryHistoryGroupIdReportsGroupNameListGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryHistoryGroupIdReportsGroupNameListGet200Response> {
        const response = await this.recoveryHistoryGroupIdReportsGroupNameListGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 설명추가
     * 재해복구결과 보고서 삭제 (모의훈련)
     */
    async recoveryHistoryGroupIdReportsResultIdDeleteRaw(requestParameters: RecoveryHistoryGroupIdReportsResultIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryGroupsGroupIdDelete200Response>> {
        if (requestParameters.group_id === null || requestParameters.group_id === undefined) {
            throw new runtime.RequiredError('group_id','Required parameter requestParameters.group_id was null or undefined when calling recoveryHistoryGroupIdReportsResultIdDelete.');
        }

        if (requestParameters.result_id === null || requestParameters.result_id === undefined) {
            throw new runtime.RequiredError('result_id','Required parameter requestParameters.result_id was null or undefined when calling recoveryHistoryGroupIdReportsResultIdDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/recovery/history/{group_id}/reports/{result_id}`.replace(`{${"group_id"}}`, encodeURIComponent(String(requestParameters.group_id))).replace(`{${"result_id"}}`, encodeURIComponent(String(requestParameters.result_id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RecoveryGroupsGroupIdDelete200ResponseFromJSON(jsonValue));
    }

    /**
     * 설명추가
     * 재해복구결과 보고서 삭제 (모의훈련)
     */
    async recoveryHistoryGroupIdReportsResultIdDelete(requestParameters: RecoveryHistoryGroupIdReportsResultIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryGroupsGroupIdDelete200Response> {
        const response = await this.recoveryHistoryGroupIdReportsResultIdDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 설명추가
     * 재해복구결과 보고서 조회
     */
    async recoveryHistoryGroupIdReportsResultIdDetailGetRaw(requestParameters: RecoveryHistoryGroupIdReportsResultIdDetailGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryHistoryGroupIdReportsResultIdDetailGet200Response>> {
        if (requestParameters.group_id === null || requestParameters.group_id === undefined) {
            throw new runtime.RequiredError('group_id','Required parameter requestParameters.group_id was null or undefined when calling recoveryHistoryGroupIdReportsResultIdDetailGet.');
        }

        if (requestParameters.result_id === null || requestParameters.result_id === undefined) {
            throw new runtime.RequiredError('result_id','Required parameter requestParameters.result_id was null or undefined when calling recoveryHistoryGroupIdReportsResultIdDetailGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/recovery/history/{group_id}/reports/{result_id}/detail`.replace(`{${"group_id"}}`, encodeURIComponent(String(requestParameters.group_id))).replace(`{${"result_id"}}`, encodeURIComponent(String(requestParameters.result_id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RecoveryHistoryGroupIdReportsResultIdDetailGet200ResponseFromJSON(jsonValue));
    }

    /**
     * 설명추가
     * 재해복구결과 보고서 조회
     */
    async recoveryHistoryGroupIdReportsResultIdDetailGet(requestParameters: RecoveryHistoryGroupIdReportsResultIdDetailGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryHistoryGroupIdReportsResultIdDetailGet200Response> {
        const response = await this.recoveryHistoryGroupIdReportsResultIdDetailGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const RecoveryHistoryGroupIdReportsGroupNameListGetTypeEnum = {
    simulation: 'dr.recovery.type.simulation',
    migration: 'dr.recovery.type.migration'
} as const;
export type RecoveryHistoryGroupIdReportsGroupNameListGetTypeEnum = typeof RecoveryHistoryGroupIdReportsGroupNameListGetTypeEnum[keyof typeof RecoveryHistoryGroupIdReportsGroupNameListGetTypeEnum];
/**
 * @export
 */
export const RecoveryHistoryGroupIdReportsGroupNameListGetResultEnum = {
    success: 'dr.recovery.result.success',
    partial_success: 'dr.recovery.result.partial_success',
    failed: 'dr.recovery.result.failed',
    canceled: 'dr.recovery.result.canceled'
} as const;
export type RecoveryHistoryGroupIdReportsGroupNameListGetResultEnum = typeof RecoveryHistoryGroupIdReportsGroupNameListGetResultEnum[keyof typeof RecoveryHistoryGroupIdReportsGroupNameListGetResultEnum];
