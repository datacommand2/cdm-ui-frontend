/* tslint:disable */
/* eslint-disable */
/**
 * CDM-DisasterRecovery
 * 설명추가
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RecoveryDashboardClusterRelationshipsGet200Response,
  RecoveryDashboardSummaryClustersGet200Response,
  RecoveryDashboardSummaryGroupsGet200Response,
  RecoveryDashboardSummaryInstancesGet200Response,
  RecoveryDashboardSummaryJobsGet200Response,
  RecoveryDashboardSummaryVolumesGet200Response,
} from '../models/index';
import {
    RecoveryDashboardClusterRelationshipsGet200ResponseFromJSON,
    RecoveryDashboardClusterRelationshipsGet200ResponseToJSON,
    RecoveryDashboardSummaryClustersGet200ResponseFromJSON,
    RecoveryDashboardSummaryClustersGet200ResponseToJSON,
    RecoveryDashboardSummaryGroupsGet200ResponseFromJSON,
    RecoveryDashboardSummaryGroupsGet200ResponseToJSON,
    RecoveryDashboardSummaryInstancesGet200ResponseFromJSON,
    RecoveryDashboardSummaryInstancesGet200ResponseToJSON,
    RecoveryDashboardSummaryJobsGet200ResponseFromJSON,
    RecoveryDashboardSummaryJobsGet200ResponseToJSON,
    RecoveryDashboardSummaryVolumesGet200ResponseFromJSON,
    RecoveryDashboardSummaryVolumesGet200ResponseToJSON,
} from '../models/index';

export interface RecoveryDashboardClusterRelationshipsGetRequest {
    limit?: number;
    offset?: number;
}

export interface RecoveryDashboardSummaryJobsGetRequest {
    recovery_type: RecoveryDashboardSummaryJobsGetRecoveryTypeEnum;
    start_date?: number;
    end_date?: number;
}

/**
 * DashboardApi - interface
 * 
 * @export
 * @interface DashboardApiInterface
 */
export interface DashboardApiInterface {
    /**
     * 클러스터 관계를 조회한다.
     * @summary 클러스터 관계 목록 조회
     * @param {number} [limit] 한 페이지에 표시할 항목 개수
     * @param {number} [offset] 페이지에 표시할 항목 인덱스
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardApiInterface
     */
    recoveryDashboardClusterRelationshipsGetRaw(requestParameters: RecoveryDashboardClusterRelationshipsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryDashboardClusterRelationshipsGet200Response>>;

    /**
     * 클러스터 관계를 조회한다.
     * 클러스터 관계 목록 조회
     */
    recoveryDashboardClusterRelationshipsGet(requestParameters: RecoveryDashboardClusterRelationshipsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryDashboardClusterRelationshipsGet200Response>;

    /**
     * 클러스터 요약 정보를 조회한다.
     * @summary 클러스터 요약
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardApiInterface
     */
    recoveryDashboardSummaryClustersGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryDashboardSummaryClustersGet200Response>>;

    /**
     * 클러스터 요약 정보를 조회한다.
     * 클러스터 요약
     */
    recoveryDashboardSummaryClustersGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryDashboardSummaryClustersGet200Response>;

    /**
     * 보호 그룹 요약 정보를 조회한다.
     * @summary 보호 그룹 요약
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardApiInterface
     */
    recoveryDashboardSummaryGroupsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryDashboardSummaryGroupsGet200Response>>;

    /**
     * 보호 그룹 요약 정보를 조회한다.
     * 보호 그룹 요약
     */
    recoveryDashboardSummaryGroupsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryDashboardSummaryGroupsGet200Response>;

    /**
     * 인스턴스 요약 정보를 조회한다.
     * @summary 인스턴스 요약
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardApiInterface
     */
    recoveryDashboardSummaryInstancesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryDashboardSummaryInstancesGet200Response>>;

    /**
     * 인스턴스 요약 정보를 조회한다.
     * 인스턴스 요약
     */
    recoveryDashboardSummaryInstancesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryDashboardSummaryInstancesGet200Response>;

    /**
     * 재해 복구 작업 요약 정보를 조회한다.
     * @summary 재해 복구 작업 요약
     * @param {'dr.recovery.type.simulation' | 'dr.recovery.type.migration'} recovery_type 복구 유형
     * @param {number} [start_date] 
     * @param {number} [end_date] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardApiInterface
     */
    recoveryDashboardSummaryJobsGetRaw(requestParameters: RecoveryDashboardSummaryJobsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryDashboardSummaryJobsGet200Response>>;

    /**
     * 재해 복구 작업 요약 정보를 조회한다.
     * 재해 복구 작업 요약
     */
    recoveryDashboardSummaryJobsGet(requestParameters: RecoveryDashboardSummaryJobsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryDashboardSummaryJobsGet200Response>;

    /**
     * 볼륨 요약 정보를 조회한다.
     * @summary 볼륨 요약
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardApiInterface
     */
    recoveryDashboardSummaryVolumesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryDashboardSummaryVolumesGet200Response>>;

    /**
     * 볼륨 요약 정보를 조회한다.
     * 볼륨 요약
     */
    recoveryDashboardSummaryVolumesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryDashboardSummaryVolumesGet200Response>;

}

/**
 * 
 */
export class DashboardApi extends runtime.BaseAPI implements DashboardApiInterface {

    /**
     * 클러스터 관계를 조회한다.
     * 클러스터 관계 목록 조회
     */
    async recoveryDashboardClusterRelationshipsGetRaw(requestParameters: RecoveryDashboardClusterRelationshipsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryDashboardClusterRelationshipsGet200Response>> {
        const queryParameters: any = {};

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.offset !== undefined) {
            queryParameters['offset'] = requestParameters.offset;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/recovery/dashboard/cluster-relationships`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RecoveryDashboardClusterRelationshipsGet200ResponseFromJSON(jsonValue));
    }

    /**
     * 클러스터 관계를 조회한다.
     * 클러스터 관계 목록 조회
     */
    async recoveryDashboardClusterRelationshipsGet(requestParameters: RecoveryDashboardClusterRelationshipsGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryDashboardClusterRelationshipsGet200Response> {
        const response = await this.recoveryDashboardClusterRelationshipsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 클러스터 요약 정보를 조회한다.
     * 클러스터 요약
     */
    async recoveryDashboardSummaryClustersGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryDashboardSummaryClustersGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/recovery/dashboard/summary/clusters`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RecoveryDashboardSummaryClustersGet200ResponseFromJSON(jsonValue));
    }

    /**
     * 클러스터 요약 정보를 조회한다.
     * 클러스터 요약
     */
    async recoveryDashboardSummaryClustersGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryDashboardSummaryClustersGet200Response> {
        const response = await this.recoveryDashboardSummaryClustersGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * 보호 그룹 요약 정보를 조회한다.
     * 보호 그룹 요약
     */
    async recoveryDashboardSummaryGroupsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryDashboardSummaryGroupsGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/recovery/dashboard/summary/groups`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RecoveryDashboardSummaryGroupsGet200ResponseFromJSON(jsonValue));
    }

    /**
     * 보호 그룹 요약 정보를 조회한다.
     * 보호 그룹 요약
     */
    async recoveryDashboardSummaryGroupsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryDashboardSummaryGroupsGet200Response> {
        const response = await this.recoveryDashboardSummaryGroupsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * 인스턴스 요약 정보를 조회한다.
     * 인스턴스 요약
     */
    async recoveryDashboardSummaryInstancesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryDashboardSummaryInstancesGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/recovery/dashboard/summary/instances`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RecoveryDashboardSummaryInstancesGet200ResponseFromJSON(jsonValue));
    }

    /**
     * 인스턴스 요약 정보를 조회한다.
     * 인스턴스 요약
     */
    async recoveryDashboardSummaryInstancesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryDashboardSummaryInstancesGet200Response> {
        const response = await this.recoveryDashboardSummaryInstancesGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * 재해 복구 작업 요약 정보를 조회한다.
     * 재해 복구 작업 요약
     */
    async recoveryDashboardSummaryJobsGetRaw(requestParameters: RecoveryDashboardSummaryJobsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryDashboardSummaryJobsGet200Response>> {
        if (requestParameters.recovery_type === null || requestParameters.recovery_type === undefined) {
            throw new runtime.RequiredError('recovery_type','Required parameter requestParameters.recovery_type was null or undefined when calling recoveryDashboardSummaryJobsGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.recovery_type !== undefined) {
            queryParameters['recovery_type'] = requestParameters.recovery_type;
        }

        if (requestParameters.start_date !== undefined) {
            queryParameters['start_date'] = requestParameters.start_date;
        }

        if (requestParameters.end_date !== undefined) {
            queryParameters['end_date'] = requestParameters.end_date;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/recovery/dashboard/summary/jobs`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RecoveryDashboardSummaryJobsGet200ResponseFromJSON(jsonValue));
    }

    /**
     * 재해 복구 작업 요약 정보를 조회한다.
     * 재해 복구 작업 요약
     */
    async recoveryDashboardSummaryJobsGet(requestParameters: RecoveryDashboardSummaryJobsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryDashboardSummaryJobsGet200Response> {
        const response = await this.recoveryDashboardSummaryJobsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * 볼륨 요약 정보를 조회한다.
     * 볼륨 요약
     */
    async recoveryDashboardSummaryVolumesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<RecoveryDashboardSummaryVolumesGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/recovery/dashboard/summary/volumes`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RecoveryDashboardSummaryVolumesGet200ResponseFromJSON(jsonValue));
    }

    /**
     * 볼륨 요약 정보를 조회한다.
     * 볼륨 요약
     */
    async recoveryDashboardSummaryVolumesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<RecoveryDashboardSummaryVolumesGet200Response> {
        const response = await this.recoveryDashboardSummaryVolumesGetRaw(initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const RecoveryDashboardSummaryJobsGetRecoveryTypeEnum = {
    simulation: 'dr.recovery.type.simulation',
    migration: 'dr.recovery.type.migration'
} as const;
export type RecoveryDashboardSummaryJobsGetRecoveryTypeEnum = typeof RecoveryDashboardSummaryJobsGetRecoveryTypeEnum[keyof typeof RecoveryDashboardSummaryJobsGetRecoveryTypeEnum];
